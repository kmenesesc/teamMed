%Alexnet
close all; clear all;

orgNetwork = alexnet;
newNetwork = [
        orgNetwork.Layers(1:end-3)
        fullyConnectedLayer(3,'WeightLearnRateFactor',20,'BiasLearnRateFactor',20)
        softmaxLayer
        classificationLayer];
imAugmenter = imageDataAugmenter(...
        'RandXReflection',true, ...
        'RandYReflection',true, ...
        'RandXTranslation',[-30 30], ...
        'RandYTranslation',[-30 30]);
    
imSize = orgNetwork.Layers(1).InputSize;

imds = imageDatastore('BrainTumorProcessedImages',...
            'IncludeSubfolders',true,'LabelSource','foldernames');
[imTrain,imVal] = splitEachLabel(imds,0.8,'randomized');
imVal = augmentedImageDatastore(imSize,imVal,'ColorPreprocessing','gray2rgb') ;
imTrain = augmentedImageDatastore(imSize,imTrain,'ColorPreprocessing','gray2rgb'); %,'DataAugmentation',imAugmenter);
        
options = trainingOptions('sgdm', ...
            'MiniBatchSize',128, ...
            'MaxEpochs',15, ...
            'InitialLearnRate',1e-4, ...
            'ValidationFrequency',30, ...
            'ValidationPatience',5, ...
            'ValidationData',imVal, ...
            'Shuffle','once', ...
            'Verbose',true);

time = datestr(now,'mm_dd_yy_HH:MM:SS') %print startime
[trainedNetwork, trainInfo] = trainNetwork(imTrain,newNetwork,options);
save(strcat('PreTrainedParameters_',time))
